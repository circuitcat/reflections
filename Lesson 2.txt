Lesson 2

git init
	- starts an empty git repository
	- nothing is tracked or staged yet

git add
	- adds files to the staging area
	- staging area can be made into a commit to track revisions

git status
	- shows status of git repository
	- even if there are no commits, ou can see what is staged or not tracked

staging area
	- need to add files to this area before they can be tracked

working directory

How is the staging area different from the working directory and the repository? What value do you think it offers?

the wd contains everything - the sa has only what we want in the commit
the sa lets you control what gets tracked and what doesn't

How can you use the staging area to make sure you have one commit per logical change?

Add each change to the staging area before making a commit

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

Branches are good for trying out experimental features

How do the diagrams help you visualize the branch structure?

You can see the head, branches, which one are unreachable

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

Merging branches combines all the changes in both branches in a logical way.

The diagram lets us see the branches and the parent of each one.

